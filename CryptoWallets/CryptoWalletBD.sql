CREATE DATABASE [CryptoWallets] CONTAINMENT = NONE ON  PRIMARY (
	NAME = N'CryptoWallets',
	FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\CryptoWallets.mdf',
	SIZE = 8192KB,
	MAXSIZE = UNLIMITED,
	FILEGROWTH = 65536KB
) LOG ON (
	NAME = N'CryptoWallets_log',
	FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\CryptoWallets_log.ldf',
	SIZE = 8192KB,
	MAXSIZE = 2048GB,
	FILEGROWTH = 65536KB
) WITH CATALOG_COLLATION = DATABASE_DEFAULT
GO

ALTER DATABASE [CryptoWallets] SET COMPATIBILITY_LEVEL = 150
GO

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled')) BEGIN
	EXEC [CryptoWallets].[dbo].[sp_fulltext_database] @action = 'enable'
END
GO

ALTER DATABASE [CryptoWallets] SET ANSI_NULL_DEFAULT OFF 
GO

ALTER DATABASE [CryptoWallets] SET ANSI_NULLS OFF 
GO

ALTER DATABASE [CryptoWallets] SET ANSI_PADDING OFF 
GO

ALTER DATABASE [CryptoWallets] SET ANSI_WARNINGS OFF 
GO

ALTER DATABASE [CryptoWallets] SET ARITHABORT OFF 
GO

ALTER DATABASE [CryptoWallets] SET AUTO_CLOSE OFF 
GO

ALTER DATABASE [CryptoWallets] SET AUTO_SHRINK OFF 
GO

ALTER DATABASE [CryptoWallets] SET AUTO_UPDATE_STATISTICS ON 
GO

ALTER DATABASE [CryptoWallets] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO

ALTER DATABASE [CryptoWallets] SET CURSOR_DEFAULT  GLOBAL 
GO

ALTER DATABASE [CryptoWallets] SET CONCAT_NULL_YIELDS_NULL OFF 
GO

ALTER DATABASE [CryptoWallets] SET NUMERIC_ROUNDABORT OFF 
GO

ALTER DATABASE [CryptoWallets] SET QUOTED_IDENTIFIER OFF 
GO

ALTER DATABASE [CryptoWallets] SET RECURSIVE_TRIGGERS OFF 
GO

ALTER DATABASE [CryptoWallets] SET  ENABLE_BROKER 
GO

ALTER DATABASE [CryptoWallets] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO

ALTER DATABASE [CryptoWallets] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO

ALTER DATABASE [CryptoWallets] SET TRUSTWORTHY OFF 
GO

ALTER DATABASE [CryptoWallets] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO

ALTER DATABASE [CryptoWallets] SET PARAMETERIZATION SIMPLE 
GO

ALTER DATABASE [CryptoWallets] SET READ_COMMITTED_SNAPSHOT OFF 
GO

ALTER DATABASE [CryptoWallets] SET HONOR_BROKER_PRIORITY OFF 
GO

ALTER DATABASE [CryptoWallets] SET RECOVERY FULL 
GO

ALTER DATABASE [CryptoWallets] SET  MULTI_USER 
GO

ALTER DATABASE [CryptoWallets] SET PAGE_VERIFY CHECKSUM  
GO

ALTER DATABASE [CryptoWallets] SET DB_CHAINING OFF 
GO

ALTER DATABASE [CryptoWallets] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO

ALTER DATABASE [CryptoWallets] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO

ALTER DATABASE [CryptoWallets] SET DELAYED_DURABILITY = DISABLED 
GO

ALTER DATABASE [CryptoWallets] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO

ALTER DATABASE [CryptoWallets] SET QUERY_STORE = OFF
GO

USE [CryptoWallets]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Addresses] (
	[AddressID] [int] IDENTITY(1,1) NOT NULL,
	[WalletID] [int] NULL,
	[PublicKey] [text] NULL,
	[PrivateKey] [varbinary](max) NULL,
PRIMARY KEY CLUSTERED (
	[AddressID] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Cryptocurrencies] (
	[CryptoID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [varchar](100) NOT NULL,
	[Abbreviation] [varchar](10) NOT NULL,
	[Description] [text] NULL,
	[CreatedAt] [datetime] NOT NULL,
	[UpdatedAt] [datetime] NOT NULL,
	[DeletedAt] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[CryptoID] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY], UNIQUE NONCLUSTERED (
	[Abbreviation] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY],
CONSTRAINT [UQ_Cryptocurrencies_Name] UNIQUE NONCLUSTERED (
	[Name] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[SeedPhrases] (
	[SeedID] [int] IDENTITY(1,1) NOT NULL,
	[WalletID] [int] NULL,
	[Phrase] [text] NOT NULL,
PRIMARY KEY CLUSTERED (
	[SeedID] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[SupportedCryptos] (
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[CryptoID] [int] NULL,
	[WalletID] [int] NULL,
PRIMARY KEY CLUSTERED (
	[ID] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[TransactionHistory] (
	[HistoryID] [int] IDENTITY(1,1) NOT NULL,
	[TransactionID] [int] NULL,
	[Status] [nvarchar](10) NOT NULL,
	[Timestamp] [datetime] NULL,
PRIMARY KEY CLUSTERED (
	[HistoryID] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Transactions] (
	[TransactionID] [int] IDENTITY(1,1) NOT NULL,
	[WalletID] [int] NULL,
	[CryptoID] [int] NULL,
	[Amount] [decimal](18, 8) NOT NULL,
	[TransactionDate] [datetime] NOT NULL,
	[Notes] [text] NULL,
PRIMARY KEY CLUSTERED (
	[TransactionID] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[WalletApplications] (
	[AppID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [varchar](100) NOT NULL,
	[Platform] [varchar](50) NULL,
	[Notes] [text] NULL,
	[CreatedAt] [datetime] NOT NULL,
	[UpdatedAt] [datetime] NOT NULL,
	[DeletedAt] [datetime] NULL,
PRIMARY KEY CLUSTERED (
	[AppID] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY],
UNIQUE NONCLUSTERED (
	[Name] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY],
CONSTRAINT [UQ_WalletApplications_Name] UNIQUE NONCLUSTERED (
	[Name] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Wallets] (
	[WalletID] [int] IDENTITY(1,1) NOT NULL,
	[WalletName] [varchar](100) NULL,
	[ApplicationID] [int] NULL,
	[CreatedAt] [datetime] NOT NULL,
	[UpdatedAt] [datetime] NOT NULL,
	[DeletedAt] [datetime] NULL,
PRIMARY KEY CLUSTERED (
	[WalletID] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	IGNORE_DUP_KEY = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_PADDING ON
GO

CREATE NONCLUSTERED INDEX [idx_crypto_abbreviation] ON [dbo].[Cryptocurrencies] (
	[Abbreviation] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	SORT_IN_TEMPDB = OFF,
	DROP_EXISTING = OFF,
	ONLINE = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY]
GO

SET ANSI_PADDING ON
GO

CREATE NONCLUSTERED INDEX [idx_app_name] ON [dbo].[WalletApplications] (
	[Name] ASC
) WITH (
	PAD_INDEX = OFF,
	STATISTICS_NORECOMPUTE = OFF,
	SORT_IN_TEMPDB = OFF,
	DROP_EXISTING = OFF,
	ONLINE = OFF,
	ALLOW_ROW_LOCKS = ON,
	ALLOW_PAGE_LOCKS = ON,
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[Cryptocurrencies] ADD  DEFAULT (getdate()) FOR [CreatedAt]
GO

ALTER TABLE [dbo].[Cryptocurrencies] ADD  DEFAULT (getdate()) FOR [UpdatedAt]
GO

ALTER TABLE [dbo].[TransactionHistory] ADD  DEFAULT (getdate()) FOR [Timestamp]
GO

ALTER TABLE [dbo].[WalletApplications] ADD  DEFAULT (getdate()) FOR [CreatedAt]
GO

ALTER TABLE [dbo].[WalletApplications] ADD  DEFAULT (getdate()) FOR [UpdatedAt]
GO

ALTER TABLE [dbo].[Wallets] ADD  DEFAULT (getdate()) FOR [CreatedAt]
GO

ALTER TABLE [dbo].[Wallets] ADD  DEFAULT (getdate()) FOR [UpdatedAt]
GO

ALTER TABLE [dbo].[Addresses]  WITH CHECK ADD FOREIGN KEY([WalletID])
	REFERENCES [dbo].[Wallets] ([WalletID])
GO

ALTER TABLE [dbo].[SeedPhrases]  WITH CHECK ADD FOREIGN KEY([WalletID])
	REFERENCES [dbo].[Wallets] ([WalletID])
GO

ALTER TABLE [dbo].[SupportedCryptos]  WITH CHECK ADD FOREIGN KEY([CryptoID])
	REFERENCES [dbo].[Cryptocurrencies] ([CryptoID])
GO

ALTER TABLE [dbo].[SupportedCryptos]  WITH CHECK ADD FOREIGN KEY([WalletID])
	REFERENCES [dbo].[Wallets] ([WalletID])
GO

ALTER TABLE [dbo].[TransactionHistory]  WITH CHECK ADD FOREIGN KEY([TransactionID])
	REFERENCES [dbo].[Transactions] ([TransactionID])
GO

ALTER TABLE [dbo].[Transactions]  WITH CHECK ADD FOREIGN KEY([CryptoID])
	REFERENCES [dbo].[Cryptocurrencies] ([CryptoID])
GO

ALTER TABLE [dbo].[Transactions]  WITH CHECK ADD FOREIGN KEY([WalletID])
	REFERENCES [dbo].[Wallets] ([WalletID])
GO

ALTER TABLE [dbo].[Wallets]  WITH CHECK ADD FOREIGN KEY([ApplicationID])
	REFERENCES [dbo].[WalletApplications] ([AppID])
GO

ALTER TABLE [dbo].[TransactionHistory]  WITH CHECK ADD CHECK  (([Status]='Failed' OR [Status]='Success' OR [Status]='Pending'))
GO

ALTER TABLE [dbo].[Transactions]  WITH CHECK ADD  CONSTRAINT [chk_positive_amount] CHECK  (([Amount]>(0)))
GO

ALTER TABLE [dbo].[Transactions] CHECK CONSTRAINT [chk_positive_amount]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GetSupportedCryptosByWallet]
    @walletName VARCHAR(100)
AS BEGIN
    SELECT
		c.Name,
		c.Abbreviation
    FROM
		SupportedCryptos sc
    INNER JOIN Cryptocurrencies c ON
		sc.CryptoID = c.CryptoID
    INNER JOIN Wallets w ON
		sc.WalletID = w.WalletID
    WHERE
		w.WalletName = @walletName;
END;
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[InsertTransaction]
    @walletID INT, 
    @cryptoID INT, 
    @amount DECIMAL(18,8), 
    @transactionDate DATETIME, 
    @notes TEXT
AS BEGIN
    INSERT INTO
		Transactions (WalletID, CryptoID, Amount, TransactionDate, Notes)
    VALUES
		(@walletID, @cryptoID, @amount, @transactionDate, @notes);
END;
GO

USE [master]
GO

ALTER DATABASE [CryptoWallets] SET  READ_WRITE 
GO